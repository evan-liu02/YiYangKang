apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'cn.leo.plugin.magic'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //Arouter路由配置
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    greendao{
        schemaVersion 1
        targetGenDir 'src/main/java'
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
            jni.srcDirs = []
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]

    api rootProject.ext.dependencies["annotations"]

    api(rootProject.ext.dependencies["appcompat"]) {
        exclude module: 'annotations'
    }
    api rootProject.ext.dependencies["constraint-layout"]

    // router
    api rootProject.ext.dependencies["arouter-api"]
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]

    // glide
    api rootProject.ext.dependencies["glide"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    // db
    api rootProject.ext.dependencies["greendao"]

    // net
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["okhttp3-logging-interceptor"]
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["retrofit-converter-gson"]
    api rootProject.ext.dependencies["retrofit-adapter-rxjava2"]
    api rootProject.ext.dependencies["retrofit-url-manager"]

    // rx2
    api rootProject.ext.dependencies["rxjava2"]
    api rootProject.ext.dependencies["rxandroid2"]

    // view
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'annotations'
        exclude module: 'appcompat'
    }
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    api rootProject.ext.dependencies["recyclerview"]
    api rootProject.ext.dependencies["base-recyclerview-adapter-helper"]
    api rootProject.ext.dependencies["ptr_load_more"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["calendarview"]

    // tools
    api rootProject.ext.dependencies["eventbus"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    implementation rootProject.ext.dependencies["permissions-dispatcher"]
    annotationProcessor rootProject.ext.dependencies["permissionsdispatcher-processor"]

    api project(path: ':magicindicator')

    api "com.github.zcweng:switch-button:0.0.3@aar"

}
